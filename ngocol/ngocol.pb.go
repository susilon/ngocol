// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ngocol.proto

package ngocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing json data
type JsonData struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JsonData) Reset()         { *m = JsonData{} }
func (m *JsonData) String() string { return proto.CompactTextString(m) }
func (*JsonData) ProtoMessage()    {}
func (*JsonData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4718e58f83c37904, []int{0}
}

func (m *JsonData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JsonData.Unmarshal(m, b)
}
func (m *JsonData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JsonData.Marshal(b, m, deterministic)
}
func (m *JsonData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JsonData.Merge(m, src)
}
func (m *JsonData) XXX_Size() int {
	return xxx_messageInfo_JsonData.Size(m)
}
func (m *JsonData) XXX_DiscardUnknown() {
	xxx_messageInfo_JsonData.DiscardUnknown(m)
}

var xxx_messageInfo_JsonData proto.InternalMessageInfo

func (m *JsonData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type MsgData struct {
	User                 string   `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Destination          string   `protobuf:"bytes,3,opt,name=Destination,proto3" json:"Destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgData) Reset()         { *m = MsgData{} }
func (m *MsgData) String() string { return proto.CompactTextString(m) }
func (*MsgData) ProtoMessage()    {}
func (*MsgData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4718e58f83c37904, []int{1}
}

func (m *MsgData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgData.Unmarshal(m, b)
}
func (m *MsgData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgData.Marshal(b, m, deterministic)
}
func (m *MsgData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgData.Merge(m, src)
}
func (m *MsgData) XXX_Size() int {
	return xxx_messageInfo_MsgData.Size(m)
}
func (m *MsgData) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgData.DiscardUnknown(m)
}

var xxx_messageInfo_MsgData proto.InternalMessageInfo

func (m *MsgData) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *MsgData) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MsgData) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

type ResponseMessage struct {
	Status               string   `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseMessage) Reset()         { *m = ResponseMessage{} }
func (m *ResponseMessage) String() string { return proto.CompactTextString(m) }
func (*ResponseMessage) ProtoMessage()    {}
func (*ResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4718e58f83c37904, []int{2}
}

func (m *ResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseMessage.Unmarshal(m, b)
}
func (m *ResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseMessage.Marshal(b, m, deterministic)
}
func (m *ResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseMessage.Merge(m, src)
}
func (m *ResponseMessage) XXX_Size() int {
	return xxx_messageInfo_ResponseMessage.Size(m)
}
func (m *ResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseMessage proto.InternalMessageInfo

func (m *ResponseMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ResponseMessage) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type User struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_4718e58f83c37904, []int{3}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type UserList struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserList) Reset()         { *m = UserList{} }
func (m *UserList) String() string { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()    {}
func (*UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_4718e58f83c37904, []int{4}
}

func (m *UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserList.Unmarshal(m, b)
}
func (m *UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserList.Marshal(b, m, deterministic)
}
func (m *UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserList.Merge(m, src)
}
func (m *UserList) XXX_Size() int {
	return xxx_messageInfo_UserList.Size(m)
}
func (m *UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_UserList proto.InternalMessageInfo

func (m *UserList) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*JsonData)(nil), "ngocol.JsonData")
	proto.RegisterType((*MsgData)(nil), "ngocol.MsgData")
	proto.RegisterType((*ResponseMessage)(nil), "ngocol.ResponseMessage")
	proto.RegisterType((*User)(nil), "ngocol.User")
	proto.RegisterType((*UserList)(nil), "ngocol.UserList")
}

func init() { proto.RegisterFile("ngocol.proto", fileDescriptor_4718e58f83c37904) }

var fileDescriptor_4718e58f83c37904 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0xcf, 0x4b, 0xfb, 0x30,
	0x14, 0x5f, 0xb6, 0xef, 0xb7, 0xab, 0xaf, 0x83, 0xc9, 0x3b, 0x48, 0xe9, 0x41, 0x46, 0xbc, 0xf4,
	0x20, 0x45, 0xea, 0x4d, 0xf0, 0x32, 0x76, 0x12, 0x27, 0xa3, 0x53, 0xc4, 0x63, 0xdc, 0x42, 0x29,
	0x6c, 0xc9, 0xd8, 0xcb, 0xc0, 0xbf, 0xc5, 0xbf, 0x56, 0x5e, 0x9a, 0x4a, 0xf5, 0xe4, 0x29, 0xef,
	0xf3, 0x2b, 0x9f, 0x47, 0x02, 0x13, 0x53, 0xdb, 0x8d, 0xdd, 0x15, 0x87, 0xa3, 0x75, 0x16, 0xa3,
	0x16, 0xc9, 0x4b, 0x88, 0x1f, 0xc8, 0x9a, 0x85, 0x72, 0x0a, 0x11, 0xfe, 0x6d, 0x95, 0x53, 0xa9,
	0x98, 0x89, 0xfc, 0xac, 0xf2, 0xb3, 0x7c, 0x83, 0xf1, 0x92, 0xea, 0x4e, 0x7e, 0x21, 0x7d, 0xec,
	0x64, 0x9e, 0x31, 0x85, 0xf1, 0x52, 0x13, 0xa9, 0x5a, 0xa7, 0x43, 0x4f, 0x77, 0x10, 0x67, 0x90,
	0x2c, 0x34, 0xb9, 0xc6, 0x28, 0xd7, 0x58, 0x93, 0x8e, 0xbc, 0xda, 0xa7, 0xe4, 0x3d, 0x4c, 0x2b,
	0x4d, 0x07, 0x6b, 0x48, 0x77, 0xa1, 0x0b, 0x88, 0xd6, 0x4e, 0xb9, 0x13, 0x85, 0x92, 0x80, 0xb8,
	0x9a, 0x57, 0x08, 0x1d, 0x7e, 0x96, 0x77, 0xed, 0x3a, 0x98, 0x41, 0xcc, 0xa7, 0x51, 0x7b, 0x1d,
	0x52, 0xdf, 0xb8, 0x77, 0xdf, 0xb0, 0x7f, 0x9f, 0x2c, 0xda, 0xcc, 0x63, 0x43, 0x0e, 0x25, 0xfc,
	0xe7, 0x99, 0x2b, 0x47, 0x79, 0x52, 0x4e, 0x8a, 0xf0, 0x4e, 0x4c, 0x56, 0xad, 0x54, 0x7e, 0x0a,
	0x88, 0x9e, 0x3c, 0x8d, 0xd7, 0x10, 0x73, 0xcc, 0x57, 0xff, 0xf0, 0x66, 0xe7, 0x7d, 0xc4, 0x1e,
	0x39, 0xc0, 0x02, 0xe2, 0xb5, 0x36, 0xdb, 0x67, 0xfd, 0xe1, 0x70, 0xda, 0xe9, 0xe1, 0x41, 0xb3,
	0xdf, 0x84, 0x1c, 0x60, 0x09, 0xf1, 0xab, 0x6a, 0xdc, 0x5f, 0xfd, 0xb9, 0xb8, 0x11, 0xf3, 0x2b,
	0xc0, 0x8d, 0xdd, 0x17, 0x74, 0xa2, 0x66, 0x67, 0x4d, 0xf0, 0xcc, 0x93, 0x76, 0xdf, 0x15, 0xff,
	0xf6, 0x4a, 0xbc, 0x47, 0xfe, 0xdb, 0x6f, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xab, 0x53, 0xed,
	0xea, 0x06, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NgocolClient is the client API for Ngocol service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NgocolClient interface {
	// List User
	ListUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserList, error)
	// Send Text
	SendText(ctx context.Context, in *MsgData, opts ...grpc.CallOption) (*MsgData, error)
	// Waiting Text
	WaitText(ctx context.Context, opts ...grpc.CallOption) (Ngocol_WaitTextClient, error)
}

type ngocolClient struct {
	cc *grpc.ClientConn
}

func NewNgocolClient(cc *grpc.ClientConn) NgocolClient {
	return &ngocolClient{cc}
}

func (c *ngocolClient) ListUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*UserList, error) {
	out := new(UserList)
	err := c.cc.Invoke(ctx, "/ngocol.Ngocol/ListUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ngocolClient) SendText(ctx context.Context, in *MsgData, opts ...grpc.CallOption) (*MsgData, error) {
	out := new(MsgData)
	err := c.cc.Invoke(ctx, "/ngocol.Ngocol/SendText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ngocolClient) WaitText(ctx context.Context, opts ...grpc.CallOption) (Ngocol_WaitTextClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Ngocol_serviceDesc.Streams[0], "/ngocol.Ngocol/WaitText", opts...)
	if err != nil {
		return nil, err
	}
	x := &ngocolWaitTextClient{stream}
	return x, nil
}

type Ngocol_WaitTextClient interface {
	Send(*MsgData) error
	Recv() (*MsgData, error)
	grpc.ClientStream
}

type ngocolWaitTextClient struct {
	grpc.ClientStream
}

func (x *ngocolWaitTextClient) Send(m *MsgData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *ngocolWaitTextClient) Recv() (*MsgData, error) {
	m := new(MsgData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NgocolServer is the server API for Ngocol service.
type NgocolServer interface {
	// List User
	ListUser(context.Context, *User) (*UserList, error)
	// Send Text
	SendText(context.Context, *MsgData) (*MsgData, error)
	// Waiting Text
	WaitText(Ngocol_WaitTextServer) error
}

// UnimplementedNgocolServer can be embedded to have forward compatible implementations.
type UnimplementedNgocolServer struct {
}

func (*UnimplementedNgocolServer) ListUser(ctx context.Context, req *User) (*UserList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUser not implemented")
}
func (*UnimplementedNgocolServer) SendText(ctx context.Context, req *MsgData) (*MsgData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendText not implemented")
}
func (*UnimplementedNgocolServer) WaitText(srv Ngocol_WaitTextServer) error {
	return status.Errorf(codes.Unimplemented, "method WaitText not implemented")
}

func RegisterNgocolServer(s *grpc.Server, srv NgocolServer) {
	s.RegisterService(&_Ngocol_serviceDesc, srv)
}

func _Ngocol_ListUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NgocolServer).ListUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ngocol.Ngocol/ListUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NgocolServer).ListUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ngocol_SendText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NgocolServer).SendText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ngocol.Ngocol/SendText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NgocolServer).SendText(ctx, req.(*MsgData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ngocol_WaitText_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NgocolServer).WaitText(&ngocolWaitTextServer{stream})
}

type Ngocol_WaitTextServer interface {
	Send(*MsgData) error
	Recv() (*MsgData, error)
	grpc.ServerStream
}

type ngocolWaitTextServer struct {
	grpc.ServerStream
}

func (x *ngocolWaitTextServer) Send(m *MsgData) error {
	return x.ServerStream.SendMsg(m)
}

func (x *ngocolWaitTextServer) Recv() (*MsgData, error) {
	m := new(MsgData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Ngocol_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ngocol.Ngocol",
	HandlerType: (*NgocolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListUser",
			Handler:    _Ngocol_ListUser_Handler,
		},
		{
			MethodName: "SendText",
			Handler:    _Ngocol_SendText_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WaitText",
			Handler:       _Ngocol_WaitText_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "ngocol.proto",
}
